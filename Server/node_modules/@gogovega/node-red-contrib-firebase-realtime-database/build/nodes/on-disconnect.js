"use strict";
/**
 * Copyright 2022-2023 Gauthier Dandele
 *
 * Licensed under the MIT License,
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/MIT.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const onDisconnectNode_1 = require("../lib/onDisconnectNode");
module.exports = function (RED) {
    function OnDisconnectNode(config) {
        RED.nodes.createNode(this, config);
        const self = this;
        self.config = config;
        self.database = RED.nodes.getNode(config.database);
        self.RED = RED;
        const firebase = new onDisconnectNode_1.OnDisconnect(self);
        firebase.registerNode();
        firebase.setNodeStatus();
        firebase.setMsgSendHandler();
        self.on("input", (msg, _send, done) => {
            firebase
                .setOnDisconnectQuery(msg)
                .then(() => done())
                .catch((error) => self.onError(error, done));
        });
        self.on("close", (removed, done) => firebase.deregisterNode(removed, done));
    }
    RED.nodes.registerType("on-disconnect", OnDisconnectNode);
};
